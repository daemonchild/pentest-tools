#!/usr/bin/env python3

#      _                                       _     _ _     _
#   __| | __ _  ___ _ __ ___   ___  _ __   ___| |__ (_) | __| |
#  / _` |/ _` |/ _ \ '_ ` _ \ / _ \| '_ \ / __| '_ \| | |/ _` |
# | (_| | (_| |  __/ | | | | | (_) | | | | (__| | | | | | (_| |
#  \__,_|\__,_|\___|_| |_| |_|\___/|_| |_|\___|_| |_|_|_|\__,_|
#

# Title:	Python NMAP File Parser
# Version:	1.0
# Purpose:	Makes a greppable file from nmap output

# Usage:	
#			cat [filename.nmap] | ./nmap-to-grep.py
#			./nmap-to-grep.py [filename.nmap]

import sys
import re
import os

if len(sys.argv) == 1:

	# Read from stdin
	data = sys.stdin

else:

	# Read from file
	file = open(sys.argv[1], 'r')
	data = file.readlines()

for line in data:

	# Is it the start of a scan report?
	if (re.search("^Nmap scan report for", line)) != None:

		host = line.split(' ')[4].strip()

	# Is it the reporting of a port?
	if (re.search("^[0-9]{1,5}/(tcp|udp)", line)) != None:

		# Tokenise
		tokens = line.split(' ')

		# Remove null tokens
		tokens = [i for i in tokens if i != '']

		# Extract from tokens
		port = tokens[0].split("/")[0]
		proto = tokens[0].split("/")[1]
		state = tokens[1]
		service = tokens[2]

		print (f"{host},{port},{state},{proto},{service}")
			
