#!/bin/bash

DEBUG=0
BASIC=1
EXTEND=1

function basicACL {
# Simple ACL
	theACL=$1
	if [[ $theACL =~ access-list\ [0-9]{2,3} ]] ; then 
	
		# Tokenise the ACL into 'words' in an array
		IFS=' ' read -r -a theLINE <<< "$theACL"
		ACLNO=`echo "${theLINE[1]}"`
		ACTION=`echo $theACL | cut -f 3 -d " "`
		SRC=`echo $theACL | cut -f 4 -d " "`
		LOG=`echo $theACL | cut -f 5 -d " "`
	
		echo "$ACLNO, $SRC, (device), (any), $ACTION, $LOG"
		if [ $DEBUG -eq 1 ] ; then
			echo "[was $theACL]"
		fi
	fi
}

function extendACL {
# Extended ACL
	theACL=$1
	
	# Extended ACLs are hard to parse
	# They come in different forms.
	#
	
	if [[ $theACL =~ access-list\ [a-z].*\ extended ]] ; then 
	
		# Tokenise the ACL into 'words' in an array
		IFS=' ' read -r -a theLINE <<< "$theACL"
		
		# We can probably tell a lot from the length
		ACLLEN=`echo "${#theLINE[@]}"`
		
		# Somethings never change
		ACLNAME=`echo "${theLINE[1]}"`
		ACTION=`echo "${theLINE[3]}"`
		PROTO=`echo "${theLINE[4]}"`
		SRC=""
		DST=""
		
		# Some simple cases can be dealt with directly
		case "$ACLLEN" in
		
			7|8)
				# access-list [acl] extended [action] ip any any [log]
				
				SRC=`echo "${theLINE[5]}"`
				DST=`echo "${theLINE[6]}"`
				LOG=`echo "${theLINE[7]}"`
				
				;;
				
			
			9|10|11|12|13|14)
				
				SRC1=`echo "${theLINE[5]}"`
				SRC2=`echo "${theLINE[6]}"`

				# Could have host/object-group, or could be an ip and mask
				if [[ $SRC1 == "host" || $SRC1 == "object-group" ]] ; then
		
					# host keyword
					SRC="$SRC2"
					DST1=`echo "${theLINE[7]}"`
					DST2=`echo "${theLINE[8]}"`
		
				elif [[ $SRC1 == "any" ]] ; then
					# ip addresses
					SRC="any"
					DST1=`echo "${theLINE[6]}"`
					DST2=`echo "${theLINE[7]}"`
		
				else
		
					# ip addresses
					SRC="$SRC1/$SRC2"
					DST1=`echo "${theLINE[7]}"`
					DST2=`echo "${theLINE[8]}"`
		
				fi
					
		
				# Could have host/object-group, or could be an ip and mask
				if [[ $DST1 == "host" || $DST1 == "object-group" ]] ; then
		
					# host keyword
					DST="$DST2"
			
				elif [[ $DST1 == "any" ]] ; then
					# ip addresses
					DST="any"
					
				elif [[ $DST1 == "eq" ]] ; then
					# oops... we've got one of those ones (13 or 14 long)
					# So DST2 is the source port, not interested
					
					DST3=`echo "${theLINE[9]}"`
					DST4=`echo "${theLINE[10]}"`
					
					if [[ $DST3 == "host" || $DST3 == "object-group" ]] ; then
					
						DST="$DST4"
					
					elif [[ $DST3 == "any" ]] ; then
					
						DST="any"
						
					else
						# ip addresses
						DST="$DST3/$DST4"
		
					
					fi
					
		
				else
					# ip addresses
					DST="$DST1/$DST2"
		
				fi

				# Service / Protocol etc

				#if [[ $PROTO == "icmp" || $PRO
				
				#fi
				
				SNDLAST=`echo "${theLINE[$ACLLEN-2]}"`
				if [[ $SNDLAST == "eq" ]] ; then
				
					SVCPORT=`echo ${theLINE[$ACLLEN-1]}`
					SVC="$SVCPORT/$PROTO"
				
				else
				
					SVC=$PROTO
					
				fi
				
				LOG=`echo ${theLINE[$ACLLEN]}`
				;;	


						
			*)
					echo "We didn't catch that one."
					echo "Length: $ACLLEN"
					echo "$theACL"
				;;
		esac
		
		echo "$ACLNAME, $SRC, $DST, $SVC, $ACTION, $LOG"
		
		if [ $DEBUG -eq 1 ] ; then

				echo "$theACL"

		fi
		
	fi

}


# 																		*** Main ***

DEVNAME=`echo $1 | tr -d ".txt"`
echo
echo "$DEVNAME"
echo

echo "ACL No, Source, Dest, Service, Action, Log"

cat $1| while read LINE ; do

	if [[ $LINE =~ ^access-list.* ]] ; then

		if [[ $BASIC -eq 1 ]] ; then
			basicACL "$LINE"
		fi
		if [[ $EXTEND -eq 1 ]] ; then
			extendACL "$LINE"
		fi

	fi

done